# commands.py
import requests
import subprocess
import keyboard  # pip install keyboard

# Nebius API configuration
NEBIUS_API_URL = "https://api.nebius.ai/v1/chat/completions"
API_KEY = "eyJhbGciOiJIUzI1NiIsImtpZCI6IlV6SXJWd1h0dnprLVRvdzlLZWstc0M1akptWXBvX1VaVkxUZlpnMDRlOFUiLCJ0eXAiOiJKV1QifQ.eyJzdWIiOiJnaXRodWJ8MTA4ODI3MjM2Iiwic2NvcGUiOiJvcGVuaWQgb2ZmbGluZV9hY2Nlc3MiLCJpc3MiOiJhcGlfa2V5X2lzc3VlciIsImF1ZCI6WyJodHRwczovL25lYml1cy1pbmZlcmVuY2UuZXUuYXV0aDAuY29tL2FwaS92Mi8iXSwiZXhwIjoxODk0NjAxNTIyLCJ1dWlkIjoiM2M5NjUxODEtOGUwMC00YmU4LWJkMWYtZWMyNzAzN2Y3NDRmIiwibmFtZSI6IkhhY2thdGhvbiBOb3N1IiwiZXhwaXJlc19hdCI6IjIwMzAtMDEtMTRUMDY6MTI6MDIrMDAwMCJ9.uGobONHuZcgjKzczAHJ9VQrQwLZDTvlT7LZjvZTEmHE"

def call_nebius_api(prompt):
    headers = {
        "Authorization": f"Bearer {API_KEY}",
        "Content-Type": "application/json"
    }
    data = {
        "model": "meta-llama/Meta-Llama-3-70B-Instruct",
        "messages": [
            {"role": "user", "content": prompt}
        ],
        "temperature": 1,
        "max_tokens": 150
    }
    response = requests.post(NEBIUS_API_URL, headers=headers, json=data)
    if response.status_code == 200:
        result = response.json()
        reply = result["choices"][0]["message"]["content"]
        return reply
    else:
        print("Nebius API Error:", response.text)
        return None

def execute_system_command(command):
    lower_command = command.lower()
    # Windows media control using the keyboard library (toggles play/pause)
    if "stop currently playing music" in lower_command:
        keyboard.send("play/pause media")
        print("Toggled media playback (stop).")
    elif "start currently playing music" in lower_command:
        keyboard.send("play/pause media")
        print("Toggled media playback (start).")
    elif "translate text" in lower_command:
        # Placeholder: Integration with OCR and translation API would go here.
        print("Translating text on screen... (feature not yet implemented)")
    elif "copy the neural network diagram" in lower_command:
        # Placeholder: Code to capture and copy a diagram from the screen would go here.
        print("Copying neural network diagram from screen... (feature not yet implemented)")
    elif "create a new file" in lower_command:
        # Simple example: create a new Python file and open it in VS Code.
        filename = "new_file.py"
        content = "# New Python file generated by Hey Miso\n\nprint('Hello from Hey Miso!')\n"
        try:
            with open(filename, "w") as f:
                f.write(content)
            subprocess.run(["code", filename], check=True)
            print(f"Created and opened {filename} in VS Code.")
        except Exception as e:
            print("Error creating/opening file:", e)
    else:
        print("Command not recognized locally. Forwarding to Nebius API...")
        reply = call_nebius_api(command)
        if reply:
            print("Nebius API response:", reply)
        else:
            print("No response from Nebius API.")

def process_command(command):
    print("Processing command:", command)
    execute_system_command(command)
